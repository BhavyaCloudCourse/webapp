name: Run Tests

on:
  push:
      branches: [ "main" ]
jobs:
  test:
    name: Packer Build
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        ports:
          - 3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
        env:
          MYSQL_ROOT_USER: ${{ secrets.MYSQL_USER }}
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
          MYSQL_DATABASE: test_dba

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20.11.0'

      - name: Install dependencies
        run: npm install
   
      - name: Create database
        run: |
          sudo /etc/init.d/mysql start
          sudo mysql -u${{ secrets.MYSQL_USER }} -p${{ secrets.MYSQL_PASSWORD }} -e 'DROP DATABASE IF EXISTS test_dba;'
          sudo mysql -u${{ secrets.MYSQL_USER }} -p${{ secrets.MYSQL_PASSWORD }} -e 'CREATE DATABASE test_dba;'
          

      - name: Run Tests    
        run: npm test
        env:
          DB_HOST: localhost
          DB_PORT: 3306
          DB_NAME: test_dba
          DB_USER: ${{ secrets.MYSQL_USER }}
          DB_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
          PORT: 8080

      - name: Authenticate with Service Account Key
        id: 'auth'
        uses: 'google-github-actions/auth@v2'
        with:
         credentials_json: '${{ secrets.GCP_CREDENTIAL }}'

      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v2'

      - name: 'Use gcloud CLI'
        run: 'gcloud info'

      - name: Install Packer
        run: |
          wget https://releases.hashicorp.com/packer/1.7.5/packer_1.7.5_linux_amd64.zip
          unzip packer_1.7.5_linux_amd64.zip
          sudo mv packer /usr/local/bin/packer
          packer version     

      - name : Zipping all files
        run: zip -r webapp.zip .

      - name : Packer Installation
        run :  packer init .

      - name: Check Packer file formatting
        run: packer fmt gcp.pkr.hcl
        
      - name: Check Packer file validation
        run: packer validate -var 'project_id=${{ secrets.GCP_PROJECT }}' -var 'zone=${{ secrets.GCP_ZONE }}' -var 'script_path=${{ secrets.SCRIPT_PATH }}' -var 'app_file_src=${{ secrets.APP_FILE_SRC }}' -var 'app_file_dest=${{ secrets.APP_DEST_SRC }}' -var 'source_image_family=${{ secrets.SRC_IMG_FAM }}' -var 'ssh_username=${{ secrets.SSH_USER }}' -var 'image_family=${{ secrets.IMG_FAM }}' gcp.pkr.hcl
      
      - name: Buid Images
        run: packer build -var 'project_id=${{ secrets.GCP_PROJECT }}' -var 'zone=${{ secrets.GCP_ZONE }}' -var 'script_path=${{ secrets.SCRIPT_PATH }}' -var 'app_file_src=${{ secrets.APP_FILE_SRC }}' -var 'app_file_dest=${{ secrets.APP_DEST_SRC }}' -var 'source_image_family=${{ secrets.SRC_IMG_FAM }}' -var 'ssh_username=${{ secrets.SSH_USER }}' -var 'image_family=${{ secrets.IMG_FAM }}' gcp.pkr.hcl
      
      - name: Create new Instance Template version
        run: |
          current_time=$(date +'%Y%m%d%H%M%S')
          template_name="webapp-temp-${current_time}"
          gcloud compute instance-templates create $template_name \
          --source-instance-template=instance-temp-webapp \
          --project=dev-project-414723 \
          --region=us-east4
          
                    

      - name: Configure managed instance group
        run: |
          gcloud compute instance-groups managed set-instance-template instance-group-webapp1 \
          --template=projects/dev-project-414723/regions/us-east4/instanceTemplates/$template_name \
          --region=us-east4

      - name: Start rolling update
        run: |
          gcloud compute instance-groups managed rolling-action start-update instance-group-webapp1 \
          --version=template=projects/dev-project-414723/regions/us-east4/instanceTemplates/$template_name \
          --region=us-east4

      - name: Monitor update progress
        run: |
          gcloud compute instance-groups managed wait-until instance-group-webapp1 \
          --version-target-reached \
          --region=us-east4